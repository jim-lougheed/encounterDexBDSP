{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jglou\\\\Documents\\\\Web Development\\\\Projects\\\\encounter-dex\\\\client\\\\src\\\\components\\\\PokemonListing\\\\PokemonListing.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Walk from \"../Walk/Walk\";\nimport Surf from \"../Surf/Surf\";\nimport Rod from \"../Fishing/Fishing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PokemonListing(_ref) {\n  _s();\n\n  let {\n    version,\n    route,\n    setRoute\n  } = _ref;\n  const params = useParams();\n  const [pokemon, setPokemon] = useState(null);\n  useEffect(() => {\n    setRoute(params.location);\n    getPokemon();\n  }, [route]);\n\n  const getPokemon = async () => {\n    console.log(\"test\");\n    const {\n      data: {\n        pokemon_encounters\n      }\n    } = await axios.get(`http://localhost:8080/${route}`);\n    const filteredPokemon = filterByVersion(pokemon_encounters);\n    setPokemon(filteredPokemon);\n  };\n\n  const filterByVersion = pokemon => {\n    const filtered = pokemon.filter(pokemon => {\n      return pokemon.version_details.some(details => {\n        return details.version.name === version;\n      });\n    }).map(pokemon => {\n      let pokemonDetails = {};\n      pokemonDetails.name = pokemon.pokemon.name;\n      pokemonDetails.versionDetails = pokemon.version_details.filter(detail => {\n        return detail.version.name === version;\n      });\n      return pokemonDetails;\n    });\n    return filtered;\n  };\n\n  pokemon && console.log(pokemon);\n\n  const filterByMethod = (pokemon, method) => {\n    return pokemon.filter(pokemon => {\n      return pokemon.versionDetails[0].encounter_details.some(details => {\n        return details.method.name === method;\n      });\n    });\n  };\n\n  const walkPokemon = pokemon && filterByMethod(pokemon, \"walk\");\n  const surfPokemon = pokemon && filterByMethod(pokemon, \"surf\");\n  const oldRodPokemon = pokemon && filterByMethod(pokemon, \"old-rod\");\n  const goodRodPokemon = pokemon && filterByMethod(pokemon, \"good-rod\");\n  const superRodPokemon = pokemon && filterByMethod(pokemon, \"super-rod\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Walk, {\n      pokemon: walkPokemon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Surf, {\n      pokemon: surfPokemon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Fishing, {\n      oldRodPokemon: oldRodPokemon,\n      goodRodPokemon: goodRodPokemon,\n      superRodPokemon: superRodPokemon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PokemonListing, \"yQeq9GGJ0AQUrU8+ZXf0ci4yGcI=\", false, function () {\n  return [useParams];\n});\n\n_c = PokemonListing;\nexport default PokemonListing;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonListing\");","map":{"version":3,"sources":["C:/Users/jglou/Documents/Web Development/Projects/encounter-dex/client/src/components/PokemonListing/PokemonListing.jsx"],"names":["useEffect","useState","useParams","axios","Walk","Surf","Rod","PokemonListing","version","route","setRoute","params","pokemon","setPokemon","location","getPokemon","console","log","data","pokemon_encounters","get","filteredPokemon","filterByVersion","filtered","filter","version_details","some","details","name","map","pokemonDetails","versionDetails","detail","filterByMethod","method","encounter_details","walkPokemon","surfPokemon","oldRodPokemon","goodRodPokemon","superRodPokemon"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport Walk from \"../Walk/Walk\";\r\nimport Surf from \"../Surf/Surf\";\r\nimport Rod from \"../Fishing/Fishing\";\r\n\r\nfunction PokemonListing({ version, route, setRoute }) {\r\n  const params = useParams();\r\n\r\n  const [pokemon, setPokemon] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setRoute(params.location);\r\n    getPokemon();\r\n  }, [route]);\r\n\r\n  const getPokemon = async () => {\r\n    console.log(\"test\");\r\n    const {\r\n      data: { pokemon_encounters },\r\n    } = await axios.get(`http://localhost:8080/${route}`);\r\n    const filteredPokemon = filterByVersion(pokemon_encounters);\r\n    setPokemon(filteredPokemon);\r\n  };\r\n\r\n  const filterByVersion = (pokemon) => {\r\n    const filtered = pokemon\r\n      .filter((pokemon) => {\r\n        return pokemon.version_details.some((details) => {\r\n          return details.version.name === version;\r\n        });\r\n      })\r\n      .map((pokemon) => {\r\n        let pokemonDetails = {};\r\n        pokemonDetails.name = pokemon.pokemon.name;\r\n        pokemonDetails.versionDetails = pokemon.version_details.filter(\r\n          (detail) => {\r\n            return detail.version.name === version;\r\n          }\r\n        );\r\n        return pokemonDetails;\r\n      });\r\n    return filtered;\r\n  };\r\n\r\n  pokemon && console.log(pokemon);\r\n\r\n  const filterByMethod = (pokemon, method) => {\r\n    return pokemon.filter((pokemon) => {\r\n      return pokemon.versionDetails[0].encounter_details.some((details) => {\r\n        return details.method.name === method;\r\n      });\r\n    });\r\n  };\r\n\r\n  const walkPokemon = pokemon && filterByMethod(pokemon, \"walk\");\r\n  const surfPokemon = pokemon && filterByMethod(pokemon, \"surf\");\r\n  const oldRodPokemon = pokemon && filterByMethod(pokemon, \"old-rod\");\r\n  const goodRodPokemon = pokemon && filterByMethod(pokemon, \"good-rod\");\r\n  const superRodPokemon = pokemon && filterByMethod(pokemon, \"super-rod\");\r\n\r\n  return (\r\n    <>\r\n      <Walk pokemon={walkPokemon} />\r\n      <Surf pokemon={surfPokemon} />\r\n      <Fishing\r\n        oldRodPokemon={oldRodPokemon}\r\n        goodRodPokemon={goodRodPokemon}\r\n        superRodPokemon={superRodPokemon}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PokemonListing;\r\n"]},"metadata":{},"sourceType":"module"}